const fs = require("fs");
const path = require("path");
const hre = require("hardhat");

async function main() {
  const [deployer] = await hre.ethers.getSigners();
  console.log(
    `Deploying contracts with account: ${deployer.address}`
  );

  // Deploy MyNFT.sol (ERC721 contract)
  const LandContract = await hre.ethers.getContractFactory("MyNFT");
  const landContract = await LandContract.deploy("LandNFT", "LND");
  await landContract.waitForDeployment();
  console.log(
    `✅ MyNFT contract deployed to: ${landContract.target}`
  );

  // Deploy MakePayment.sol (ERC20 contract)
  const PaymentContract = await hre.ethers.getContractFactory(
    "MakePayment"
  );
  const paymentContract = await PaymentContract.deploy();
  await paymentContract.waitForDeployment();
  console.log(
    `✅ MakePayment contract deployed to: ${paymentContract.target}`
  );

  // --- FIX ---
  // Read the ABI directly from the compiled artifact files.
  // This is the most reliable way to get the correct JSON array format.
  const myNFTArtifact = await hre.artifacts.readArtifact("MyNFT");
  const makePaymentArtifact = await hre.artifacts.readArtifact(
    "MakePayment"
  );

  // Define the path for the output file
  const abiPath = path.join(__dirname, "..", "utils", "abi.js");

  // Create the content for the abi.js file
  const content = `
// Auto-generated by deploy.js

export const contractAddress = "${landContract.target}";
export const PaymentcontractAddress = "${paymentContract.target}";

export const abi = ${JSON.stringify(myNFTArtifact.abi, null, 2)};

export const Paymentabi = ${JSON.stringify(
    makePaymentArtifact.abi,
    null,
    2
  )};
`;

  // Write the content to the file
  fs.writeFileSync(abiPath, content);
  console.log("✅ abi.js updated successfully in utils/");
}

main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
